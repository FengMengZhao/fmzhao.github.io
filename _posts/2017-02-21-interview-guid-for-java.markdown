---
title: Java面试准备向导
layout: post
category: Java 实习
tags: 面试 指南
---

### Java笔试算法题OJ

[LeetCode OJ 平台](https://leetcode.com/ "LeetCode")

> 根据平台说明，先将easy level的算法题做一做。

---
---

### Java面试中常问的问题

#### JVM内存模型

* Java堆
* 方法区
* Java虚拟机栈
* 本地方法栈
* 程序计数器(Program Counter)

##### Java虚拟机栈

Java虚拟机栈是Java方法执行的内存模型，每一个方法在执行的时候都会创建一个栈帧，栈帧当中存放着局部变量表、操作数栈、动态链接、返回地址等。

Java虚拟机栈在编译的时候就确定了内存的大小。如果线程请求的栈深度大于虚拟机所能够提供的深度，将会抛出`StackOverflowError`；如果虚拟机在动态扩展栈时无法申请到足够的内存空间将会抛出`OutofMemoryError`。

局部变量表中存放的是方法参数和方法内部定义的局部变量、各种基本的数据类型、对象引用(reference)和ReturnAddress类型。

操作数栈用于保存中间变量。

动态链接指向方法区中的运行时常量池。

##### 堆

Java堆是用来存放Java对象和数组的地方，又叫做"gc堆"，其内存物理上可以不连续，逻辑上必须连续。

##### 方法区

方法区用来储存：已经被虚拟机加载的类信息、常量、静态变量、JIT编译后的代码等。

方法区又称为永久代，是堆的一个逻辑部分，运行时的常量池也是方法区的一部分。

Class文件除了类的版本、字段、方法、借口等描述信息之外，还有一项是Class文件常量池，这部分在加载之后将放在方法区的运行时常量池中。运行时的常量池相对于Class文件常量池的另一个特点就是动态性。运行期间可以将新的常量放入池中，较多用的是String类的`inter()`方法。

**详细内容请参考：《深入理解Java虚拟机》**

---

#### Java垃圾回收

##### 概念区别

* 强引用(Object o = new Object())，只要强引用还存在GC就永远不会回收它。
* 软引用，可能还有用，但并非必须的对象，第一次gc时进行标记，第二次gc时进行回收。
* 弱引用，强度比软引用更弱一些，引用关联的对象只能生存到下一次gc回收之前。
* 虚引用，最弱的一种引用关系，用处是希望在这个对象被收集器回收时得到一个系统通知。

##### 垃圾对象的判定

* 引用计数法：每多一个引用，引用计数器加1，引用失效，计数器减1，计数为0时，回收。
* 跟搜索法：定义GC-Root，从GC Root开始向下搜索，当搜索不可达时，证明此对象不可用。GC-Root包括栈帧中的本地变量表引用对象、方法区静态属性引用变量、方法区常量引用变量和本地方法栈中Native引用的对象。

##### 垃圾回收算法

* 标记-清除算法
* 标记-整理算法
* 复制算法
* 分代收集算法(新生代，老生代)

---
